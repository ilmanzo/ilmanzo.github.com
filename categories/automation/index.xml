<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>automation on ilManzo's blog</title><link>https://ilmanzo.github.io/categories/automation/</link><description>Recent content in automation on ilManzo's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2022 Andrea Manzini</copyright><lastBuildDate>Sun, 08 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/categories/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>compare package version across distros</title><link>https://ilmanzo.github.io/post/compare_package_versions_across_distros/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/compare_package_versions_across_distros/</guid><description>&lt;p>Following on the &lt;a href="https://ilmanzo.github.io/post/check-last-update-on-packages/">previous post&lt;/a>, I added an useful feature in order to have more information about a package.&lt;/p>
&lt;p>Since I maintain some openSUSE packages, I want to be informed if they gets outdated and if other packagers have released newer versions.
TLDR: This script answers the question &amp;ldquo;Do some of my openSUSE packages have newer versions in other distros?&amp;rdquo;&lt;/p></description></item><item><title>get update info about packages</title><link>https://ilmanzo.github.io/post/check-last-update-on-packages/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/check-last-update-on-packages/</guid><description>&lt;p>being lazy, I made a small utility to check last pkgs update date on &lt;a href="https://build.opensuse.org/">Open Build Service&lt;/a>.&lt;/p>
&lt;p>You can find the project repository &lt;a href="https://github.com/ilmanzo/package_last_update">on my github&lt;/a>, but it&amp;rsquo;s so simple I can paste also here.&lt;/p>
&lt;p>The &lt;a href="https://github.com/ilmanzo/package_last_update/blob/master/README.md">usage&lt;/a> is pretty simple: just run the command giving it a package name, and then it will tell you when it was last updated. With this information, you can decide/check if the package needs some work on!&lt;/p></description></item><item><title>get notifications about openQA job status</title><link>https://ilmanzo.github.io/post/openqa-jobs-notifier/</link><pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/openqa-jobs-notifier/</guid><description>&lt;p>I got bored of &lt;em>&amp;lsquo;waiting&amp;rsquo;&lt;/em> for an &lt;a href="http://open.qa/">OpenQA&lt;/a> &lt;a href="https://openqa.opensuse.org/">openSUSE&lt;/a> job to complete, so I wrote this quick and dirty script&amp;hellip;&lt;/p>
&lt;p>For the same purpose there&amp;rsquo;s also the excellent and full-fledged &lt;a href="https://openqa-bites.github.io/posts/2021-02-25-openqa-mon/">openqa-mon&lt;/a>, but I took the chance to learn something by implementing a simpler version myself.&lt;/p></description></item><item><title>automate OTP credentials for multi-factor authentication</title><link>https://ilmanzo.github.io/post/otp-generation-from-command-line/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/otp-generation-from-command-line/</guid><description>Background: I work with one or more terminal command-line always opened and having to pick up my phone to generate an OTP breaks my flow; also it&amp;rsquo;s always nice to have an alternate source of multi-factor authentication if something bad happens, one day you could lose or break your trusty mobile device.
Therefore I was looking for a way to login through Okta portals without a phone. You may argument that this defeats the whole meaning of MFA, but let&amp;rsquo;s say it&amp;rsquo;s only an hack for research and fun purpose &amp;hellip;</description></item><item><title>how to display the IP address of a virtual machine before logon</title><link>https://ilmanzo.github.io/post/know-your-vm-address-before-logon/</link><pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/know-your-vm-address-before-logon/</guid><description>For testing or development purposes, I do a wide use of small linux virtual machines.
After spawning a new guest (Virtualbox, VMWare or any other), often you want to log on over ssh but you don&amp;rsquo;t yet know its ip address. You need to login as &amp;lsquo;root&amp;rsquo; in the console just to issue a quick &amp;lsquo;ifconfig&amp;rsquo;, and after writing down the address, you logout and connect with your comfortable terminal. In order to save some time and keystrokes, I put this in my rc.</description></item><item><title>Automate Cisco ssh connections with plink in Windows</title><link>https://ilmanzo.github.io/post/plink-automation/</link><pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/plink-automation/</guid><description>A quick and dirty way to send a bunch of commands to any ssh device (in my case, Cisco appliances)&amp;hellip;
create a plain old batch file with commands echoed inside: @echo off echo ter len 0 echo show ver echo show clock echo exit execute the batch, piping its output to plink.exe (putty command link ssh client): c:\&amp;gt; commands.bat | plink -ssh -l username -pw password 11.22.33.44</description></item></channel></rss>