<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Sysadmin on ilManzo's blog</title><link>https://ilmanzo.github.io/categories/sysadmin/</link><description>Recent content in Sysadmin on ilManzo's blog</description><generator>Hugo -- 0.152.1</generator><language>en-us</language><copyright>2012-2025 Andrea Manzini</copyright><lastBuildDate>Thu, 23 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/categories/sysadmin/index.xml" rel="self" type="application/rss+xml"/><item><title>Automated files cleanup on Linux</title><link>https://ilmanzo.github.io/post/my-linux-janitor/</link><pubDate>Thu, 23 Oct 2025 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/my-linux-janitor/</guid><description>ðŸš® Or: how I taught my Linux box to take out its own trash</description></item><item><title>Systemd Socket Activation Explained</title><link>https://ilmanzo.github.io/post/systemd-socket-activated-services/</link><pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/systemd-socket-activated-services/</guid><description>Stop Wasting Resources: how to start your services on demand</description></item><item><title>Testing a cheap MicroSD card quality</title><link>https://ilmanzo.github.io/post/testing_a_microsd_card/</link><pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/testing_a_microsd_card/</guid><description>Some basic checks to ensure you bought a good storage for your files</description></item><item><title>convert a binary file to ascii using hexdump</title><link>https://ilmanzo.github.io/post/hexdump-for-binary-file-manipulation/</link><pubDate>Thu, 20 Oct 2016 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/hexdump-for-binary-file-manipulation/</guid><description>convert a binary file to ascii using hexdump</description></item><item><title>monit helper for quota monitoring in go</title><link>https://ilmanzo.github.io/post/golang-quota-monit-helper/</link><pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/golang-quota-monit-helper/</guid><description>a small program to parse quota information and report via monit</description></item><item><title>Sincronizzare una directory tra due server linux</title><link>https://ilmanzo.github.io/post/simple-directory-sync/</link><pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/simple-directory-sync/</guid><description>Sincronizzare una directory tra due server linux</description></item><item><title>monitor apache performance statistics</title><link>https://ilmanzo.github.io/post/logging-apache-performance-historical-statistics/</link><pubDate>Wed, 05 Nov 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/logging-apache-performance-historical-statistics/</guid><description>how to use apache mod_status to collect performance statistics</description></item><item><title>Linux: get simple I/O statistics per process</title><link>https://ilmanzo.github.io/post/simple-io-statistics-per-process/</link><pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/simple-io-statistics-per-process/</guid><description>&lt;p&gt;I had a trouble with a long process running and wish to know how much I/O
this process is doing, so I wrote this quick and dirty python 2.x script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; time&lt;span style="color:#f92672"&gt;,&lt;/span&gt;sys&lt;span style="color:#f92672"&gt;,&lt;/span&gt;datetime
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;read_stat&lt;/span&gt;(pid):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; f&lt;span style="color:#f92672"&gt;=&lt;/span&gt;open(&lt;span style="color:#e6db74"&gt;&amp;#34;/proc/&lt;/span&gt;&lt;span style="color:#e6db74"&gt;%s&lt;/span&gt;&lt;span style="color:#e6db74"&gt;/io&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;%&lt;/span&gt; pid ,&lt;span style="color:#e6db74"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; line &lt;span style="color:#f92672"&gt;in&lt;/span&gt; f:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; line&lt;span style="color:#f92672"&gt;.&lt;/span&gt;startswith(&lt;span style="color:#e6db74"&gt;&amp;#39;rchar&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; rchar&lt;span style="color:#f92672"&gt;=&lt;/span&gt;line&lt;span style="color:#f92672"&gt;.&lt;/span&gt;split(&lt;span style="color:#e6db74"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;)[&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; line&lt;span style="color:#f92672"&gt;.&lt;/span&gt;startswith(&lt;span style="color:#e6db74"&gt;&amp;#39;wchar&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; wchar&lt;span style="color:#f92672"&gt;=&lt;/span&gt;line&lt;span style="color:#f92672"&gt;.&lt;/span&gt;split(&lt;span style="color:#e6db74"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;)[&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; f&lt;span style="color:#f92672"&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; int(rchar),int(wchar)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;pid&lt;span style="color:#f92672"&gt;=&lt;/span&gt;sys&lt;span style="color:#f92672"&gt;.&lt;/span&gt;argv[&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;r0,w0 &lt;span style="color:#f92672"&gt;=&lt;/span&gt; read_stat(pid)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;while&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; time&lt;span style="color:#f92672"&gt;.&lt;/span&gt;sleep(&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r1,w1 &lt;span style="color:#f92672"&gt;=&lt;/span&gt; read_stat(pid)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print &lt;span style="color:#e6db74"&gt;&amp;#34;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;%s&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;\t\t&lt;/span&gt;&lt;span style="color:#e6db74"&gt;r=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;%s&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;\t\t&lt;/span&gt;&lt;span style="color:#e6db74"&gt;w=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;%s&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;%&lt;/span&gt; (datetime&lt;span style="color:#f92672"&gt;.&lt;/span&gt;datetime&lt;span style="color:#f92672"&gt;.&lt;/span&gt;now()&lt;span style="color:#f92672"&gt;.&lt;/span&gt;time(),r1&lt;span style="color:#f92672"&gt;-&lt;/span&gt;r0,w1&lt;span style="color:#f92672"&gt;-&lt;/span&gt;w0)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r0,w0&lt;span style="color:#f92672"&gt;=&lt;/span&gt;r1,w1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must give the process PID number as input to the script. In the output you
get the read/write throughput of the process in bytes per second, for instance:&lt;/p&gt;</description></item><item><title>how to setup disk redundancy with BTRFS filesystem</title><link>https://ilmanzo.github.io/post/btrfs-mirroring/</link><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/btrfs-mirroring/</guid><description>how to setup disk redundancy with BTRFS filesystem</description></item><item><title>Compress and encrypt your backups</title><link>https://ilmanzo.github.io/post/compress-and-encrypt-your-remote-backups/</link><pubDate>Wed, 11 Jun 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/compress-and-encrypt-your-remote-backups/</guid><description>How to securely backup your files in a remote location</description></item><item><title>dovecot: cleaning old Spam and Trash messages after some days</title><link>https://ilmanzo.github.io/post/postfix-dovecot-cleanup-virtual-folders/</link><pubDate>Wed, 05 Mar 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/postfix-dovecot-cleanup-virtual-folders/</guid><description>a script to do maintenance of a small number of mail folders</description></item><item><title>number of physical sockets and cpu cores</title><link>https://ilmanzo.github.io/post/sockets-and-cores/</link><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/sockets-and-cores/</guid><description>how to find out how much your next licence will cost...</description></item><item><title>run-parts e problemi di crontab</title><link>https://ilmanzo.github.io/post/run-parts-problemi-crontab/</link><pubDate>Thu, 06 Dec 2012 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/run-parts-problemi-crontab/</guid><description>&lt;p&gt;Mi e&amp;rsquo; capitato di inserire degli script nelle varie directory
/etc/cron.daily, /etc/cron.weekly
ma di scoprire che questi script non vengono eseguiti.
Il motivo e&amp;rsquo; che il run-parts usato nelle Debian e derivate ignora i file che contengono un &amp;ldquo;.&amp;rdquo; (e quindi tutti quelli con l&amp;rsquo;estensione)&lt;/p&gt;
&lt;p&gt;Questo comportamento e&amp;rsquo; &lt;a href="http://www.oreillynet.com/linux/blog/2007/08/runparts_scripts_a_note_about.html"&gt;documentato&lt;/a&gt; anche nella man page, e previene alcuni inconvenienti come l&amp;rsquo;esecuzione dei &lt;strong&gt;.bak&lt;/strong&gt; ma lo scrivo anche qui per ricordarmelo &amp;hellip; E forse potra&amp;rsquo; essere utile a qualcun altro :)&lt;/p&gt;</description></item><item><title>generare comandi di creazione utenze a partire da un passwd</title><link>https://ilmanzo.github.io/post/generare-comandi-di-creazione-utenze-a-partire-da-un-passwd/</link><pubDate>Fri, 23 Nov 2012 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/generare-comandi-di-creazione-utenze-a-partire-da-un-passwd/</guid><description>&lt;p&gt;A volte e&amp;rsquo; necessario replicare le utenze con gli stessi parametri su piu&amp;rsquo; server linux diversi.&lt;/p&gt;
&lt;p&gt;Perche&amp;rsquo; farlo a mano ? Se sono tanti e&amp;rsquo; un lavoro noioso e potremmo anche commettere degli errori.&lt;/p&gt;
&lt;p&gt;Ecco un semplice &lt;em&gt;one-liner&lt;/em&gt; che fa il parsing di un file &lt;strong&gt;/etc/passwd&lt;/strong&gt; e genera
i corrispondenti comandi &lt;strong&gt;useradd&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;awk -F: '{printf &amp;quot;useradd -m -u%s -g%s -d%s -s%s %s\n&amp;quot; , $3,$4,$6,$7,$1}' /etc/passwd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ovviamente l&amp;rsquo;output puo&amp;rsquo; essere comodamente filtrato con grep, usato via copy&amp;amp;paste, inserito in uno script, eccetera&amp;hellip;&lt;/p&gt;</description></item></channel></rss>