<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CGI on ilManzo's blog</title><link>https://ilmanzo.github.io/tags/cgi/</link><description>Recent content in CGI on ilManzo's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2022 Andrea Manzini</copyright><lastBuildDate>Thu, 29 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/tags/cgi/index.xml" rel="self" type="application/rss+xml"/><item><title>CGI with the Go Programming Language</title><link>https://ilmanzo.github.io/post/cgi-apps-in-go/</link><pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/cgi-apps-in-go/</guid><description>Following with the GO standard library exploration, I&amp;rsquo;ve written a toy example for using the CGI features. Native GoLang CGI web applications are very fast and can be useful for example in embedded systems, or in cheap web hosting where is not possible to run custom HTTP servers. The solution has some weak points, starting from lock management, but is only presented as a proof of concept and not for real use cases.</description></item></channel></rss>