<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Debian on ilManzo's blog</title><link>https://ilmanzo.github.io/tags/debian/</link><description>Recent content in Debian on ilManzo's blog</description><generator>Hugo -- 0.128.2</generator><language>en-us</language><copyright>2012-2024 Andrea Manzini</copyright><lastBuildDate>Mon, 06 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/tags/debian/index.xml" rel="self" type="application/rss+xml"/><item><title>linux: how to access DHCP options from client</title><link>https://ilmanzo.github.io/post/access-dhcp-options-from-client/</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/access-dhcp-options-from-client/</guid><description>how to access DHCP options from client</description></item><item><title>Sincronizzare una directory tra due server linux</title><link>https://ilmanzo.github.io/post/simple-directory-sync/</link><pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/simple-directory-sync/</guid><description>Sincronizzare una directory tra due server linux</description></item><item><title>gestire i led delle schede PC Engines ALIX in Ruby</title><link>https://ilmanzo.github.io/post/gestire-i-led-delle-schede-pc-engines-alix/</link><pubDate>Fri, 09 Nov 2012 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/gestire-i-led-delle-schede-pc-engines-alix/</guid><description>Natale si avvicina: mentre smanettavo su queste ottime PC Engines ALIX su cui ho installato una Debian modificata, ho scritto una comoda interfaccia per accendere/spegnere e far lampeggiare i led alla velocita&amp;rsquo; desiderata&amp;hellip;
class Led #numero da 1 a 3 def initialize(ledno) ledno++ # passo 0 ma comando 1 ledno=1 if ledno&amp;lt;1 ledno=3 if ledno&amp;gt;3 @ledsyspath=&amp;#34;/sys/devices/platform/leds_alix2/leds/alix:#{ledno}/&amp;#34; end def blink(millisec) File.open(@ledsyspath+&amp;#39;trigger&amp;#39;,&amp;#39;w&amp;#39;) { |f| f.write(&amp;#39;timer&amp;#39;) } File.open(@ledsyspath+&amp;#39;delay_off&amp;#39;,&amp;#39;w&amp;#39;) do |f| f.write(millisec.to_s) end File.open(@ledsyspath+&amp;#39;delay_on&amp;#39;,&amp;#39;w&amp;#39;) do |f| f.</description></item></channel></rss>