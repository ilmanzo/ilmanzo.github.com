<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>script on ilManzo's blog</title><link>https://ilmanzo.github.io/tags/script/</link><description>Recent content in script on ilManzo's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2022 Andrea Manzini</copyright><lastBuildDate>Mon, 21 Dec 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/tags/script/index.xml" rel="self" type="application/rss+xml"/><item><title>simple and easy linux job queue</title><link>https://ilmanzo.github.io/post/simple-easy-job-queue-linux/</link><pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/simple-easy-job-queue-linux/</guid><description>Recently I have been in a situation where I needed a simple &amp;lsquo;batch&amp;rsquo; job scheduler, where I could submit some long-running tasks to a server and have a &amp;lsquo;system&amp;rsquo; that serialize access the execution with some basic job control facilities (remove a job from the queue, stop the processing, and so on).
Linux printing subsystem is already designed to do this, and we can exploit the CUPS printing subsystem to run our &amp;ldquo;batch&amp;rdquo; jobs.</description></item></channel></rss>