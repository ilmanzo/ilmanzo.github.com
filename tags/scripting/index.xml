<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Scripting on ilManzo's blog</title><link>https://ilmanzo.github.io/tags/scripting/</link><description>Recent content in Scripting on ilManzo's blog</description><generator>Hugo -- 0.147.8</generator><language>en-us</language><copyright>2012-2025 Andrea Manzini</copyright><lastBuildDate>Mon, 16 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/tags/scripting/index.xml" rel="self" type="application/rss+xml"/><item><title>How much code are you testing ? (3)</title><link>https://ilmanzo.github.io/post/pintool-function-tracing/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/pintool-function-tracing/</guid><description>Using Intel PIN to measure test coverage on binaries</description></item><item><title>How much code are you testing ? (2)</title><link>https://ilmanzo.github.io/post/measuring-test-coverage-on-binaries/</link><pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/measuring-test-coverage-on-binaries/</guid><description>Measuring test coverage on binaries</description></item><item><title>Testing a cheap MicroSD card quality</title><link>https://ilmanzo.github.io/post/testing_a_microsd_card/</link><pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/testing_a_microsd_card/</guid><description>Some basic checks to ensure you bought a good storage for your files</description></item><item><title>migrating a repository from mercurial to git</title><link>https://ilmanzo.github.io/post/migrating-a-repository-from-mercurial-to-git/</link><pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/migrating-a-repository-from-mercurial-to-git/</guid><description>&lt;p>Since &lt;a href="https://bitbucket.org/blog/sunsetting-mercurial-support-in-bitbucket">bitbucket is sunsetting the support for mercurial repositories&lt;/a>, I wrote a quick and dirty script to automate the migration from mercurial to GIT:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -u
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$#&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -ne &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Illegal number of parameters&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;usage: migrate.sh reponame hgrepourl gitrepourl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>REPONAME&lt;span style="color:#f92672">=&lt;/span>$1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HGURL&lt;span style="color:#f92672">=&lt;/span>$2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITURL&lt;span style="color:#f92672">=&lt;/span>$3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;Migrating &lt;/span>$REPONAME&lt;span style="color:#e6db74"> from &lt;/span>$HGURL&lt;span style="color:#e6db74"> to &lt;/span>$GITURL&lt;span style="color:#e6db74">...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hg clone $HGURL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd $REPONAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hg bookmark -r default master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hg bookmarks hg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv $REPONAME &lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_hg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir &lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init --bare .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ../&lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_hg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hg push ../&lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ../&lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote add hgmigrate $GITURL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push hgmigrate master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf /tmp/&lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_hg /tmp/&lt;span style="color:#e6db74">${&lt;/span>REPONAME&lt;span style="color:#e6db74">}&lt;/span>_git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;...done&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Before running the script, you only need to install git and create a git repository (remote or local).&lt;/p></description></item><item><title>linux: how to access DHCP options from client</title><link>https://ilmanzo.github.io/post/access-dhcp-options-from-client/</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/access-dhcp-options-from-client/</guid><description>how to access DHCP options from client</description></item><item><title>redirect output of an already running process</title><link>https://ilmanzo.github.io/post/redirect-output-of-running-process/</link><pubDate>Fri, 24 Apr 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/redirect-output-of-running-process/</guid><description>how to store standard output/error of a process after the execution</description></item><item><title>number of physical sockets and cpu cores</title><link>https://ilmanzo.github.io/post/sockets-and-cores/</link><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/sockets-and-cores/</guid><description>how to find out how much your next licence will cost...</description></item><item><title>generare comandi di creazione utenze a partire da un passwd</title><link>https://ilmanzo.github.io/post/generare-comandi-di-creazione-utenze-a-partire-da-un-passwd/</link><pubDate>Fri, 23 Nov 2012 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/generare-comandi-di-creazione-utenze-a-partire-da-un-passwd/</guid><description>&lt;p>A volte e&amp;rsquo; necessario replicare le utenze con gli stessi parametri su piu&amp;rsquo; server linux diversi.&lt;/p>
&lt;p>Perche&amp;rsquo; farlo a mano ? Se sono tanti e&amp;rsquo; un lavoro noioso e potremmo anche commettere degli errori.&lt;/p>
&lt;p>Ecco un semplice &lt;em>one-liner&lt;/em> che fa il parsing di un file &lt;strong>/etc/passwd&lt;/strong> e genera
i corrispondenti comandi &lt;strong>useradd&lt;/strong>&lt;/p>
&lt;pre>&lt;code>awk -F: '{printf &amp;quot;useradd -m -u%s -g%s -d%s -s%s %s\n&amp;quot; , $3,$4,$6,$7,$1}' /etc/passwd
&lt;/code>&lt;/pre>
&lt;p>Ovviamente l&amp;rsquo;output puo&amp;rsquo; essere comodamente filtrato con grep, usato via copy&amp;amp;paste, inserito in uno script, eccetera&amp;hellip;&lt;/p></description></item></channel></rss>