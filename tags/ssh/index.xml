<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ssh on ilManzo's blog</title><link>https://ilmanzo.github.io/tags/ssh/</link><description>Recent content in ssh on ilManzo's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2022 Andrea Manzini</copyright><lastBuildDate>Tue, 26 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml"/><item><title>a honeypot ssh server in Go</title><link>https://ilmanzo.github.io/post/a-honeypot-ssh-server-in-go/</link><pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/a-honeypot-ssh-server-in-go/</guid><description>honey-ssh-pot Curious about who and how attempts ssh login to your home server ? Me too&amp;hellip; So I wrote a very simple ssh honeypot, just to collect interesting info about the kind guys who knocks my door :)
warning: this is safe, but don&amp;rsquo;t run the service (well, ANY service) as root user. Even better if you can run it as a dedicate unprivileged user.
This program is only for didactic use and not intended for deployment in a production network environment.</description></item><item><title>Automate Cisco ssh connections with plink in Windows</title><link>https://ilmanzo.github.io/post/plink-automation/</link><pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/plink-automation/</guid><description>A quick and dirty way to send a bunch of commands to any ssh device (in my case, Cisco appliances)&amp;hellip;
create a plain old batch file with commands echoed inside: @echo off echo ter len 0 echo show ver echo show clock echo exit execute the batch, piping its output to plink.exe (putty command link ssh client): c:\&amp;gt; commands.bat | plink -ssh -l username -pw password 11.22.33.44</description></item></channel></rss>