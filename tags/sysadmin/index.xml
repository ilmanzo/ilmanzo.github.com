<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Sysadmin on ilManzo's blog</title><link>https://ilmanzo.github.io/tags/sysadmin/</link><description>Recent content in Sysadmin on ilManzo's blog</description><generator>Hugo -- 0.136.5</generator><language>en-us</language><copyright>2012-2024 Andrea Manzini</copyright><lastBuildDate>Tue, 01 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ilmanzo.github.io/tags/sysadmin/index.xml" rel="self" type="application/rss+xml"/><item><title>The Linux kernel ftrace</title><link>https://ilmanzo.github.io/post/kernel_ftrace/</link><pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/kernel_ftrace/</guid><description>Overview of the Linux kernel tracing feature</description></item><item><title>Playing with Linux kernel capabilities</title><link>https://ilmanzo.github.io/post/playing_with_linux_capabilities/</link><pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/playing_with_linux_capabilities/</guid><description>What are and how to use the Linux kernel capabilities</description></item><item><title>SEGFAULT: Debugging a crashing application</title><link>https://ilmanzo.github.io/post/debugging_segfault/</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/debugging_segfault/</guid><description>What&amp;#39;s a core dump and how to use it for debugging ?</description></item><item><title>First steps with Linux Test Project</title><link>https://ilmanzo.github.io/post/first_steps_of_ltp_linux_test_project/</link><pubDate>Sat, 10 Feb 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/first_steps_of_ltp_linux_test_project/</guid><description>How the Linux Kernel is tested, one syscall at a time</description></item><item><title>Introduction to packaging Rust application</title><link>https://ilmanzo.github.io/post/introduction_to_packaging_rust_applications/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/introduction_to_packaging_rust_applications/</guid><description>How to package a Rust application on openSUSE</description></item><item><title>Fault Injection in Network Namespace and Veth Environments</title><link>https://ilmanzo.github.io/post/faulty_network_simulation/</link><pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/faulty_network_simulation/</guid><description>How to improve your software by simulating a faulty network device</description></item><item><title>Expect the unexpected</title><link>https://ilmanzo.github.io/post/faulty_disk_simulation/</link><pubDate>Sun, 19 Nov 2023 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/faulty_disk_simulation/</guid><description>How to improve your software by simulating a faulty block device</description></item><item><title>Quiet fans on Thinkpad P15</title><link>https://ilmanzo.github.io/post/quiet_thinkpad_fans/</link><pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/quiet_thinkpad_fans/</guid><description>How to lower the default fan noise on Thinkpad P15 Gen2</description></item><item><title>linux: how to access DHCP options from client</title><link>https://ilmanzo.github.io/post/access-dhcp-options-from-client/</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/access-dhcp-options-from-client/</guid><description>how to access DHCP options from client</description></item><item><title>convert a binary file to ascii using hexdump</title><link>https://ilmanzo.github.io/post/hexdump-for-binary-file-manipulation/</link><pubDate>Thu, 20 Oct 2016 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/hexdump-for-binary-file-manipulation/</guid><description>convert a binary file to ascii using hexdump</description></item><item><title>monit helper for quota monitoring in go</title><link>https://ilmanzo.github.io/post/golang-quota-monit-helper/</link><pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/golang-quota-monit-helper/</guid><description>a small program to parse quota information and report via monit</description></item><item><title>redirect output of an already running process</title><link>https://ilmanzo.github.io/post/redirect-output-of-running-process/</link><pubDate>Fri, 24 Apr 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/redirect-output-of-running-process/</guid><description>how to store standard output/error of a process after the execution</description></item><item><title>Sincronizzare una directory tra due server linux</title><link>https://ilmanzo.github.io/post/simple-directory-sync/</link><pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/simple-directory-sync/</guid><description>Sincronizzare una directory tra due server linux</description></item><item><title>Linux: get simple I/O statistics per process</title><link>https://ilmanzo.github.io/post/simple-io-statistics-per-process/</link><pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/simple-io-statistics-per-process/</guid><description>&lt;p>I had a trouble with a long process running and wish to know how much I/O
this process is doing, so I wrote this quick and dirty python 2.x script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time&lt;span style="color:#f92672">,&lt;/span>sys&lt;span style="color:#f92672">,&lt;/span>datetime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">read_stat&lt;/span>(pid):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">=&lt;/span>open(&lt;span style="color:#e6db74">&amp;#34;/proc/&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">/io&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> pid ,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> line &lt;span style="color:#f92672">in&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> line&lt;span style="color:#f92672">.&lt;/span>startswith(&lt;span style="color:#e6db74">&amp;#39;rchar&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rchar&lt;span style="color:#f92672">=&lt;/span>line&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> line&lt;span style="color:#f92672">.&lt;/span>startswith(&lt;span style="color:#e6db74">&amp;#39;wchar&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wchar&lt;span style="color:#f92672">=&lt;/span>line&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> int(rchar),int(wchar)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pid&lt;span style="color:#f92672">=&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>argv[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r0,w0 &lt;span style="color:#f92672">=&lt;/span> read_stat(pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r1,w1 &lt;span style="color:#f92672">=&lt;/span> read_stat(pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#ae81ff">\t\t&lt;/span>&lt;span style="color:#e6db74">r=&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#ae81ff">\t\t&lt;/span>&lt;span style="color:#e6db74">w=&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (datetime&lt;span style="color:#f92672">.&lt;/span>datetime&lt;span style="color:#f92672">.&lt;/span>now()&lt;span style="color:#f92672">.&lt;/span>time(),r1&lt;span style="color:#f92672">-&lt;/span>r0,w1&lt;span style="color:#f92672">-&lt;/span>w0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r0,w0&lt;span style="color:#f92672">=&lt;/span>r1,w1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You must give the process PID number as input to the script. In the output you
get the read/write throughput of the process in bytes per second, for instance:&lt;/p></description></item><item><title>Compress and encrypt your backups</title><link>https://ilmanzo.github.io/post/compress-and-encrypt-your-remote-backups/</link><pubDate>Wed, 11 Jun 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/compress-and-encrypt-your-remote-backups/</guid><description>How to securely backup your files in a remote location</description></item><item><title>dovecot: cleaning old Spam and Trash messages after some days</title><link>https://ilmanzo.github.io/post/postfix-dovecot-cleanup-virtual-folders/</link><pubDate>Wed, 05 Mar 2014 00:00:00 +0000</pubDate><guid>https://ilmanzo.github.io/post/postfix-dovecot-cleanup-virtual-folders/</guid><description>a script to do maintenance of a small number of mail folders</description></item></channel></rss>